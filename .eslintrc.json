{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nrwl/nx"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ]
      }
    },
    {
        "files": ["*.ts", "*.tsx"],
        "extends": ["plugin:@nrwl/nx/typescript"],
        "rules": {
            "@typescript-eslint/member-ordering": "error",
            "@typescript-eslint/no-empty-function": "off",
            "@typescript-eslint/no-empty-interface": "error",
            "@typescript-eslint/no-inferrable-types": "error",
            "@typescript-eslint/no-misused-new": "error",
            "@typescript-eslint/no-non-null-assertion": "error",
            "@typescript-eslint/prefer-function-type": "error",
            "@typescript-eslint/unified-signatures": "error",
            "@typescript-eslint/prefer-optional-chain": "error",
            "@typescript-eslint/prefer-nullish-coalescing": "error",
            "@typescript-eslint/await-thenable": "error",
            "@typescript-eslint/no-redeclare": "error",
            "@typescript-eslint/consistent-type-imports": "error",
            "camelcase": "off",
            "@typescript-eslint/no-explicit-any": "error",
            "@typescript-eslint/no-unused-vars": "error",
            "@typescript-eslint/naming-convention": [
                "error",
                {
                    "selector": "typeLike",
                    "format": ["PascalCase"]
                },
                {
                    "selector": "interface",
                    "format": ["PascalCase"],
                    "custom": {
                        "regex": "^I[A-Z]",
                        "match": false
                    }
                }
            ],
            "arrow-body-style": "error",
            "constructor-super": "error",
            "curly": "error",
            "brace-style": "error",
            "dot-notation": "off",
            "eqeqeq": ["error", "smart"],
            "guard-for-in": "error",
            "id-blacklist": "off",
            "id-match": "off",
            "no-bitwise": "error",
            "no-caller": "error",
            "no-console": [
                "error",
                {
                    "allow": [
                        "log",
                        "dirxml",
                        "warn",
                        "error",
                        "dir",
                        "timeLog",
                        "assert",
                        "clear",
                        "count",
                        "countReset",
                        "group",
                        "groupCollapsed",
                        "groupEnd",
                        "table",
                        "Console",
                        "markTimeline",
                        "profile",
                        "profileEnd",
                        "timeline",
                        "timelineEnd",
                        "timeStamp",
                        "context"
                    ]
                }
            ],
            "no-debugger": "error",
            "no-empty": "off",
            "no-eval": "error",
            "no-fallthrough": "error",
            "no-new-wrappers": "error",
            "no-shadow": "off",
            "@typescript-eslint/no-shadow": "error",
            "no-throw-literal": "error",
            "no-undef-init": "error",
            "no-underscore-dangle": "off",
            "no-unused-expressions": "error",
            "no-var": "error",
            "prefer-const": "error",
            "radix": "error",
            "sort-imports": "off",
            "import/order": "off"
        }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    }
  ]
}
